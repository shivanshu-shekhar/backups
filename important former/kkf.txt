import Button from 'react-bootstrap/Button';  //imported Button from react-bootstrap
import Modal from 'react-bootstrap/Modal';    //imported Modal from react-bootstrap
// import { useFormik } from 'formik';           //imported useFormik from formik 
import { useEffect, useRef, useState } from 'react';  //imported useEffect and useState from react
import { fetchApi } from '../../../utils/fetchApi';
import feedbackImg from "../../../assets/images/feedback.png"

const Feedback = (props) => {
  const formRef = useRef('');
  const [feedbackArray, setFeedbackArray] = useState([]);
  const [isError, setIsError] = useState(false);
  const [name, setName] = useState('');
  const [email, setEmail] = useState('');
  const [phone, setPhone] = useState('');
  const [comment, setComment] = useState('');
  const [rate, setRate] = useState('');
  // const [modalVisible, setModalVisible] = useState(true);

  //Fetching feedback data given by the user . And after fetching the data we validate the product id
  useEffect(() => {
    fetchApi('http://localhost:5000/feedback')
      .then((val) => {
        // console.log(val);
        setFeedbackArray([...val])
      })
      .catch((err) => {
        setIsError(true);
      })
  }, [])

  const handleSubmit = (event) => {
    event.preventDefault();
    let x=[];
    // x=feedbackArray.filter(feedback => (feedback.email === email && feedback.productId === props.productId));
    feedbackArray.forEach(feedback => {
      if(feedback.email === email && feedback.productId === props.productId){
        x.push(feedback);
      }
    });
    console.log(x.length);
    if(x.length>0){
      alert("the email is used for this product");
    }
    else{
      alert("entry done successfully");
      const data = {name, email, phone, comment, rate}
      fetch('http://localhost:5000/feedback', {
        method: "POST",
        body: JSON.stringify({ ...data, productId: props.productId }),
        headers: {
          "Content-type": "application/json; charset=UTF-8"
        }})
      formRef.current.reset();
      window.location.reload()
    }
  }

  //formik is used to easily submit the data recieved by user to enter it in feedback in backend
  // const formik = useFormik({
  //   initialValues: {
  //     name: '',
  //     email: '',
  //     phone: '',
  //     comment: '',
  //     rate: ''
  //   },
  //   onSubmit: (values, { resetForm }) => {
  //     fetch(' http://localhost:5000/feedback', {
  //       method: "POST",
  //       body: JSON.stringify({ ...values, productId: props.productId }),
  //       headers: {
  //         "Content-type": "application/json; charset=UTF-8"
  //       }
  //     })
  //     resetForm({ values: "" })
  //   }
  // })

  if (isError) {
    return (<div className="alert alert-danger">Some Error Occured! Please Try again later.</div>)
  }

  return (
    <Modal
      key={props.productId}
      show={props.show}
      onHide={props.onHide}
      size="lg"
      aria-labelledby="contained-modal-title-vcenter"
      centered
    >
      <Modal.Header closeButton>
        <Modal.Title id="contained-modal-title-vcenter">
          <img src={feedbackImg} alt="" style={{
            height: "200px",
            width: "716px"
          }}/>
        </Modal.Title>
      </Modal.Header>
      <Modal.Body>
          <form autoComplete="off" onSubmit={handleSubmit} ref={formRef} className="form-container">
            <label>Name:</label>
            <input data-testid="name" type="text" name="name" id="name" className='form-control'
              onChange={(event) => setName(event.target.value)} required /> <br />

            <label>E-mail:</label>
            <input type="email" data-testid="email" name="email" id="email" className='form-control'
              onChange={(event) => setEmail(event.target.value)} required /> <br />

            <label>Phone:</label>
            <input type="text" data-testid="phone" name="phone" id="phone" className='form-control'
              onChange={(event) => setPhone(event.target.value)} required /> <br />

            <label>Comment:</label>
            <input data-testid="comment" type="text-area" name="comment" id="comment" className='form-control'
              onChange={(event) => setComment(event.target.value)} required /> <br />

            <input type="radio" id="star5" name="rate" defaultValue={5} 
            onChange={(event) => setRate(event.target.value)} required />
            <label htmlFor="star5" title="text">
              😆
            </label>
            <input type="radio" id="star4" name="rate" defaultValue={4} 
            onChange={(event) => setRate(event.target.value)} required />
            <label htmlFor="star4" title="text">
              😄
            </label>
            <input type="radio" id="star3" name="rate" defaultValue={3} 
            onChange={(event) => setRate(event.target.value)} required />
            <label htmlFor="star3" title="text">
              😐
            </label>
            <input type="radio" id="star2" name="rate" defaultValue={2} 
            onChange={(event) => setRate(event.target.value)} required />
            <label htmlFor="star2" title="text">
              😠
            </label>
            <input type="radio" id="star1" name="rate" defaultValue={1} 
            onChange={(event) => setRate(event.target.value)} required />
            <label htmlFor="star1" title="text">
              🤢
            </label>

            <button data-testid="submiter" className="btn btn-primary" type="submit">Submit</button>
          </form>
        </Modal.Body>
      <Modal.Footer>
        <Button onClick={props.onHide}>Close</Button>
      </Modal.Footer>
    </Modal>
  )
}

export default Feedback
